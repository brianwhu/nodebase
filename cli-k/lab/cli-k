#!/bin/env node
/* vim:set filetype=javascript: */

var clik = require("..");
var results = clik.configure({
        messages: {
            invalid: "BAD ${opt}: ${val}",
            unknown: "UNRECOGNIZED: ${arg}"
        },
        contents: {
            prologue: "Examples:\n\
    cli-k --debug --date-value=2018 --positive=12\n\
    cli-k --debug --date-value=2018-09-03 --integer-value=-10",
            epilogue: "See http://www.oracle.com/technetwork/java/javase/documentation/index.html for more details."
        }
    }).parse("1.0.0", "cli-k sample program", {
        stringValue: { value: "defaultString", doc: "A <string> value" }, 
        backwards: { value: false, doc: "Going backwards" },
        identifier: { value: "", doc: "A valid <identifier>", regex: /^[a-zA-Z][a-zA-Z0-9]*$/ },
        integerValue: { value: 0, doc: "An arbitrary <integer> value" },
        force: { value: false, doc: "Forcing overwrite" },
        forward: { value: false, doc: "Forwarding the results" },
        binary: { value: false, doc: "Using binary encoding" },
        positive: { value: 1, doc: "A <positive integer> value", regex: /^[0-9]+$/, check: function(v) { return v > 0; } },
        nonNegative: { value: 0, doc: "A <non-negative integer> value", regex: /^[0-9]+$/ },
        dateValue: { value: new Date(""), doc: "The starting <date> of the operation" },
        verbose: { value: false, doc: "Show more information" },
        debug: { value: false, doc: "Print options as JSON" }
    },
    "source", "[[user@]host:]path", [ "partical-count", "partical-id", [] ], "[[user@]host:]path"
);
if (results.opts.debug.value && !results._error) {
    console.log(JSON.stringify(results, null, 2));
}
